"use strict";require("core-js/modules/es.promise"),require("core-js/modules/web.queue-microtask");var e,t=(e=require("ava"))&&"object"==typeof e&&"default"in e?e.default:e;function s(e,t){global[e]=t}require("@k2oss/k2-broker-core/test-framework"),require("./index"),t.skip("describe returns the hardcoded instance",async e=>{let t=null;s("postSchema",(function(e){t=e})),await Promise.resolve(ondescribe()),e.deepEqual(t,{objects:{Weather:{displayName:"Weather",description:"Open Weather API",properties:{city:{displayName:"City",type:"string"},units:{displayName:"Unit",type:"string"},apiKey:{displayName:"Key",type:"string"},condition:{displayName:"condition",type:"string"},temperature:{displayName:"temperature",type:"decimal"},feelsLike:{displayName:"feelsLike",type:"decimal"}},methods:{GetCurrentWeather:{displayName:"Get Current Weather",type:"read",inputs:["city","units","apikey"],outputs:["weatherDescription","temperature","feelsLike"]}}}}}),e.pass()}),t.skip("execute fails with the wrong parameters",async e=>{let t=await e.throwsAsync(Promise.resolve(onexecute("test1","unused",{},{})));e.deepEqual(t.message,"The object test1 is not supported."),t=await e.throwsAsync(Promise.resolve(onexecute("Weather","test2",{},{}))),e.deepEqual(t.message,"The method test2 is not supported."),e.pass()}),t("execute passes",async e=>{let t=null;s("XMLHttpRequest",class{constructor(){t=this.recorder={},this.recorder.headers={}}open(e,t){this.recorder.opened={method:e,url:t}}setRequestHeader(e,t){this.recorder.headers[e]=t}send(){queueMicrotask(()=>{this.readyState=4,this.status=200,this.responseText=JSON.stringify({coord:{lon:-97.74,lat:30.27},weather:[{id:800,main:"Clear",description:"clear sky",icon:"01d"}],base:"stations",main:{temp:50.9,feels_like:45.01,temp_min:48,temp_max:54,pressure:1024,humidity:61},visibility:16093,wind:{speed:5.82,deg:60},clouds:{all:1},dt:1581633749,sys:{type:1,id:5739,country:"US",sunrise:1581599603,sunset:1581639431},timezone:-21600,id:4671654,name:"Austin",cod:200}),this.onreadystatechange(),delete this.responseText})}});let r=null;s("postResult",(function(e){r=e})),await Promise.resolve(onexecute("Weather","GetCurrentWeather",{},{city:"Miami,Florida",units:"Imperial",apiKey:"be97c93a9a2cd31dd93d8f0203dc2327"})),e.deepEqual(r,{condition:"hurricanes",temperature:"99.9",feelsLike:99.01}),e.pass()});
//# sourceMappingURL=test.js.map
